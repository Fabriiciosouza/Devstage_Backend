# Nome do workflow que aparecerá na aba Actions do GitHub
name: Build and Push to Docker Hub

# Define quando o workflow será executado
on:
  push:
    branches: ["main"] # Executa apenas quando houver push na branch main

# Variáveis de ambiente globais que podem ser usadas em qualquer job
env:
  DOCKERHUB_REPO: fafa014/devstage_backend # Nome do repositório no Docker Hub

# Define os jobs (trabalhos) que serão executados
jobs:
  # Job chamado "docker" - pode ter qualquer nome
  docker:
    # Define o sistema operacional onde o job será executado
    runs-on: ubuntu-latest

    # Lista de passos (steps) que serão executados sequencialmente
    steps:
      # Passo 1: Fazer checkout do código fonte do repositório
      - name: Checkout code
        uses: actions/checkout@v4 # Action oficial do GitHub para baixar o código

      # Passo 2: Fazer login no Docker Hub usando credenciais secretas
      - name: Login to Docker Hub
        uses: docker/login-action@v2 # Action oficial para login no Docker Hub
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }} # Username armazenado nos secrets
          password: ${{ secrets.DOCKERHUB_TOKEN }} # Token de acesso armazenado nos secrets

      # Passo 3: Configurar o Docker Buildx (ferramenta avançada de build)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2 # Habilita recursos avançados como multi-platform builds

      # Passo 4: Construir a imagem Docker e fazer push para o Docker Hub
      - name: Build and push
        uses: docker/build-push-action@v4 # Action oficial para build e push
        with:
          context: . # Contexto do build (diretório atual)
          push: true # Habilita o push para o registry
          # Lista de tags que serão aplicadas à imagem:
          # - Tag 'latest' para sempre apontar para a versão mais recente
          # - Tag com o SHA do commit para versionamento específico
          tags: |
            ${{ env.DOCKERHUB_REPO }}:latest
            ${{ env.DOCKERHUB_REPO }}:${{ github.sha }}
